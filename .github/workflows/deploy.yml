#GitHub Actions 工作流：自动部署 Vue/Vite 应用到 GitHub Pages
name: Deploy to GitHub Pages

#触发器：在推送到 main 分支时运行此工作流
on:
  push:
    branches:
      - main

#允许手动从 GitHub Actions 界面触发部署
  workflow_dispatch:

#设置权限，允许 GitHub Actions 创建部署
permissions:
  contents: read
  pages: write
  id-token: write

#定义作业
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

# 部署到 GitHub Pages 的环境
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: 20 # 推荐使用稳定的 Node.js 版本

    - name: Configure Node.js environment
      run: |
        echo "NODE_ENV=production" >> $GITHUB_ENV

    - name: Install dependencies
      run: |
        npm ci
      env:
        NODE_ENV: production

    - name: Cache node modules
      uses: actions/cache@v3
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - name: Build project (Vite)
      # 运行构建命令，生成 dist 目录
      run: |
        npm run build
      env:
        NODE_ENV: production

    - name: Check build output
      run: |
        echo "Build output directory contents:"
        ls -la dist/
        echo "Build size:"
        du -sh dist/

    - name: Setup Pages
      # 配置 GitHub Pages 环境
      uses: actions/configure-pages@v5
    
    - name: Upload artifact
      # 上传 Vite 构建生成的静态文件 (dist 目录)
      uses: actions/upload-pages-artifact@v3
      with:
        path: ./dist # 指定要上传的构建目录

    - name: Deploy to GitHub Pages
      # 自动部署到 gh-pages 环境
      id: deployment
      uses: actions/deploy-pages@v4
